name: Release

on:
  push:
    tags:
      - '*-v[0-9]+.[0-9]+.[0-9]+*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux-x86_64
            binary_name: {{ project-name }}
            binary_ext: ""
          - os: windows-latest
            target: windows-x86_64
            binary_name: {{ project-name }}.exe
            binary_ext: ".exe"
          - os: macos-latest
            target: macos-x86_64
            binary_name: {{ project-name }}
            binary_ext: ""
    
    runs-on: ${{ '{{' }} matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable
    
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
    
    - name: Run cargo check
      run: cargo check --all-targets --all-features
    
    - name: Run tests
      run: cargo test --all-features
    
    - name: Build release
      run: cargo build --release --all-features
    
    - name: Extract version from tag
      id: version
      run: echo "version=${{ '{{' }} github.ref_name }}" | sed 's/.*-v//' >> $GITHUB_OUTPUT
    
    - name: Rename binary
      run: cp "target/release/${{ '{{' }} matrix.binary_name }}" "{{ project-name }}-${{ '{{' }} steps.version.outputs.version }}-${{ '{{' }} matrix.target }}${{ '{{' }} matrix.binary_ext }}"
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binary-${{ '{{' }} matrix.target }}
        path: "{{ project-name }}-${{ '{{' }} steps.version.outputs.version }}-${{ '{{' }} matrix.target }}${{ '{{' }} matrix.binary_ext }}"

  create-release:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
    
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ '{{' }} github.ref_name }}
        name: Release ${{ '{{' }} github.ref_name }}
        draft: false
        prerelease: ${{ '{{' }} contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') }}
        artifacts: "{{ project-name }}-*"
        token: ${{ '{{' }} secrets.GITHUB_TOKEN }}
name: Release

on:
  push:
    tags:
      - '*-v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    runs-on: ${{ '{{' }} matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable
    
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
    
    - name: Run cargo check
      run: cargo check --all-targets --all-features
    
    - name: Run tests
      run: cargo test --all-features
    
    - name: Build release
      run: cargo build --release --all-features
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binary-${{ '{{' }} runner.os }}
        path: target/release/{{ project-name }}*

  create-release:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ '{{' }} github.ref_name }}
        name: Release ${{ '{{' }} github.ref_name }}
        draft: false
        prerelease: ${{ '{{' }} contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') }}
        artifacts: |
          binary-Linux/{{ project-name }}
          binary-Windows/{{ project-name }}.exe
          binary-macOS/{{ project-name }}
        token: ${{ '{{' }} secrets.GITHUB_TOKEN }}